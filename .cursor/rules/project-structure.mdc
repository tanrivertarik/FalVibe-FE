# Project Structure Guide

This project uses Expo Router v3 for file-based routing. The directory structure follows conventions common in Expo and React Native projects.

## Key Directories

-   **`app/`**: This is the most important directory for routing.
    -   Files and directories inside `app/` define the routes of the application.
    -   The main layout is defined in `[app/_layout.tsx](mdc:app/_layout.tsx)`.
    -   Tab navigation is set up in `[app/(tabs)/_layout.tsx](mdc:app/(tabs)/_layout.tsx)`, with each file inside `app/(tabs)/` representing a tab.
    -   Dynamic routes can be created using brackets, like `[app/fortune/[type].tsx](mdc:app/fortune/[type].tsx)`.

-   **`components/`**: Contains reusable React components used throughout the application.
    -   Themed components like `[ThemedText.tsx](mdc:components/ThemedText.tsx)` and `[ThemedView.tsx](mdc:components/ThemedView.tsx)` are good examples of base components to use.

-   **`assets/`**: Holds static assets.
    -   `assets/images/`: For images used in the app.
    -   `assets/fonts/`: For custom fonts.

-   **`constants/`**: For storing application-wide constants.
    -   `[Colors.ts](mdc:constants/Colors.ts)` defines the color palette for light and dark modes.

-   **`hooks/`**: Contains custom React hooks.
    -   `[useColorScheme.ts](mdc:hooks/useColorScheme.ts)` is used to get the current color scheme (light/dark).
    -   `[useThemeColor.ts](mdc:hooks/useThemeColor.ts)` is a hook to get a color from the theme based on the current color scheme.
